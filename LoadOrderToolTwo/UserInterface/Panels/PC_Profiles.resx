<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="I_TempProfile.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAHTSURBVEhL7ZW5ThthFIUNDdBAgSIa6JAQiDxCivAEUEEH
        PIAlO97jwm1ShIZFiPUNWBqoIEI0ILG8AYhUiIIlRSRIFPjOcGTLGgRmoINPuvrnnnv/c8cz/8ixt0Mu
        l2vJ5/OjrCOlUqnZ8uuAYSPmu8StIpvN7sTj8QaXXw53nZFxoVDo53rAg9IuvwxM2zD7TaxY0sBVaapZ
        ig5GE8RNJpPpshTTtTQGjVuKBnfYk0gk/mI0aakMA6ZU4310W3o+GC9jdMmgD8q5nkeb07U0zK/QlpQ/
        G4z62HzL+tWSBvxUOFVeVA/DPlmqmTo26lieJJPJJmuhAaqpR72kdfdqDfDTh9ikozhsKUDmCqcB/MIR
        9w5aehx9QDQfE3t8YPWWA2SucBqgHobsE0c1fXw0pjDRc/1sqQy1TYXTMurVHuKLpYehoRWDC9Y1S1VQ
        61M4rYLHus6xPZeHpTAUx6KebfZ8ZP8/buCHpWoodmJ+zTprKQQ1vYMNpyEwn7NHp6UKiIvEH+6k3VII
        6tvEltMQxWKxQx4MWrBUIZVKnVGcdhoZzGfS6fSp0woU9hlwwvqd9VuU0F6ewC+u92xbQS+JhkOKwZ9K
        xPhPHHBse237zlPEYnesLz5TpT3SzgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="B_Cancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAGmSURBVEhL7ZM9S8NgFIWLqyAO+g9cRHB2E1fpXHTxFzg0
        Tfo1SLUgiJs6OYggTiI4CG4ioqsu0lGpoih0EEeRos8JN5I2gZqaSTxwyP04956+b5PMPyqVSrZcLt95
        nndLPGvl9FAqlR5Y/Cli1LRyesDgMTCQmZXTA4uz8MmM0r+iVMAvu9YV9GAL7tRqtSEb+zkYnOcP7AC1
        JXgPu412baw3EJ/BU0sjwKceWuyT2qu1e4OBC3huaQQsWw4vD2jt3yOxAV/jS9xAF59NntyAgT0JeKdX
        iTtAbUW9arW6b/LkBjT10chgikWjLHALhcKIetTGrTfniwHxZrA0TGtHwdJJCRjMablino71ppXznPHF
        oFgs6i3rWO44TtvaUfCRDJvQizlBTj2eE74YBFdkqW5A/UNL44HgjcENxWEThhe1IDAU4gxUszQeGNwg
        OlKs5TbkwHo+n//glAO+EGhZYgNEJ4iuFIdPgPE2ve9XVOjLQAL9Up5bDKwZ12GL2rHJfPRl4LruIMID
        TN41IBK3OcEl8ZjJfLBsgXrDUl1vQzVL/wQymS+rop76KxxqWAAAAABJRU5ErkJggg==
</value>
  </data>
</root>